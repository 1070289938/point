<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SongInfoMapper">

    <resultMap type="SongInfo" id="SongInfoResult">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="headImg" column="head_img"/>
        <result property="userId" column="user_id"/>
        <result property="price" column="price"/>
        <result property="details" column="details"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="deleteTime" column="delete_time"/>
    </resultMap>

    <resultMap type="SongVO" id="SongVOResult">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="img" column="head_img"/>
        <result property="price" column="price"/>
        <result property="details" column="details"/>
        <result property="createTime" column="create_time"/>
        <result property="userId" column="user_id"/>
        <result property="link" column="link_count"/>

        <result property="download" column="download_count"/>

    </resultMap>


    <sql id="selectSongInfoVo">
        select id,
               name,
               head_img,
               user_id,
               price,
               details,
               create_time,
               update_time,
               delete_time
        from song_info
    </sql>

    <select id="selectSongInfoList" parameterType="SongInfo" resultMap="SongInfoResult">
        <include refid="selectSongInfoVo"/>
        <where>
            <if test="name != null  and name != ''">and name like concat('%', #{name}, '%')</if>
            <if test="headImg != null  and headImg != ''">and head_img = #{headImg}</if>
            <if test="userId != null ">and user_id = #{userId}</if>
            <if test="price != null ">and price = #{price}</if>
            <if test="details != null  and details != ''">and details = #{details}</if>
            <if test="deleteTime != null ">and delete_time = #{deleteTime}</if>
        </where>
    </select>

    <select id="selectSongInfoById" parameterType="Integer" resultMap="SongInfoResult">
        <include refid="selectSongInfoVo"/>
        where id = #{id}
    </select>

    <insert id="insertSongInfo" parameterType="SongInfo" useGeneratedKeys="true" keyProperty="id">
        insert into song_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="headImg != null">head_img,</if>
            <if test="userId != null">user_id,</if>
            <if test="price != null">price,</if>
            <if test="details != null">details,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="deleteTime != null">delete_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="headImg != null">#{headImg},</if>
            <if test="userId != null">#{userId},</if>
            <if test="price != null">#{price},</if>
            <if test="details != null">#{details},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="deleteTime != null">#{deleteTime},</if>
        </trim>
    </insert>

    <update id="updateSongInfo" parameterType="SongInfo">
        update song_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="headImg != null">head_img = #{headImg},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="price != null">price = #{price},</if>
            <if test="details != null">details = #{details},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="deleteTime != null">delete_time = #{deleteTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSongInfoById" parameterType="Long">
        delete
        from song_info
        where id = #{id}
    </delete>

    <delete id="deleteSongInfoByIds" parameterType="String">
        delete from song_info where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectSongVOListAll" resultMap="SongVOResult" parameterType="QuerySongPojo">
        SELECT i.id,i.`name`,i.head_img,i.price,i.details,i.create_time,i.user_id,
        (SELECT COUNT(0) FROM `song_like` WHERE `song_id`= i.`id` AND `delete_time` IS NULL) link_count,
        (SELECT COUNT(0) FROM `song_download` WHERE `song_id`= i.`id`) download_count
        FROM `song_info` i
        <if test="collect">
            INNER JOIN `song_collect` c ON c.`song_id`=i.`id`
            WHERE c.`user_id`=#{userId}
            AND c.delete_time IS NULL
        </if>
        <if test="isPay">
            where i.price != 0
        </if>
        <if test="free">
            where i.price = 0
        </if>
        <if test="recommend">
            where i.`user_id` = 1
        </if>
        <if test="name !=null and name !='' ">
            where i.name like concat('%',#{name},'%')
        </if>

        order by i.create_time desc

    </select>


    <select id="selectSongVOListByUserId" resultMap="SongVOResult" parameterType="QuerySongPojo">
        SELECT i.id,i.`name`,i.head_img,i.price,i.details,i.create_time,i.user_id,
        (SELECT COUNT(0) FROM `song_like` WHERE `song_id`= i.`id` AND `delete_time` IS NULL) link_count,
        (SELECT COUNT(0) FROM `song_download` WHERE `song_id`= i.`id`) download_count
        FROM `song_info` i
        INNER JOIN song_download d ON d.`song_id`=i.`id`
        <choose>
            <when test="collect">
                INNER JOIN `song_collect` c ON c.`song_id`=i.`id`
                WHERE c.`user_id`=#{userId}
                AND c.delete_time IS NULL
            </when>
            <otherwise>
                WHERE d.`user_id`=#{userId}
            </otherwise>
        </choose>
        order by d.create_time
    </select>


    <select id="selectSongInfoNext" resultMap="SongInfoResult" parameterType="QueryCodeSongPojo">
        SELECT i.*
        FROM `song_info` i
        <if test="collect">
            INNER JOIN `song_collect` c ON c.`song_id` = i.`id`
        </if>
        WHERE i.id &lt; #{songId}
        <if test="collect">
            AND c.`user_id` = #{userId}
        </if>
        <if test="recommend">
            AND i.`user_id` = 1
        </if>
        order by i.id desc
        LIMIT 0,1
    </select>

    <select id="selectSongInfoFirst" resultMap="SongInfoResult" parameterType="QueryCodeSongPojo">
        SELECT i.*
        FROM `song_info` i
        <if test="collect">
            INNER JOIN `song_collect` c ON c.`song_id` = i.`id`
        </if>
        <where>
            <if test="collect">
                AND c.`user_id` = #{userId}
            </if>
            <if test="recommend">
                AND i.`user_id` = 1
            </if>
        </where>

        order by i.id desc
        LIMIT 0,1
    </select>

    <select id="selectSongInfoRandom" resultMap="SongInfoResult" parameterType="QueryCodeSongPojo">
        SELECT i.*
        FROM `song_info` i
        <if test="collect">
            INNER JOIN `song_collect` c ON c.`song_id` = i.`id`
        </if>
        <where>
            <if test="collect">
                AND c.`user_id` = #{userId}
            </if>
            <if test="recommend">
                AND i.`user_id` = 1
            </if>
        </where>
        ORDER BY RAND()
        LIMIT 0,1
    </select>


    <select id="selectSongInfoPrevious" resultMap="SongInfoResult" parameterType="QueryCodeSongPojo">
        SELECT i.*
        FROM `song_info` i
        <if test="collect">
            INNER JOIN `song_collect` c ON c.`song_id` = i.`id`
        </if>
        WHERE i.id > #{songId}
        <if test="collect">
            AND c.`user_id` = #{userId}
        </if>
        <if test="recommend">
            AND i.`user_id` = 1
        </if>
        order by i.id
        LIMIT 0,1
    </select>

    <select id="selectSongInfoEnd" resultMap="SongInfoResult" parameterType="QueryCodeSongPojo">
        SELECT i.*
        FROM `song_info` i
        <if test="collect">
            INNER JOIN `song_collect` c ON c.`song_id` = i.`id`
        </if>
        <where>
            <if test="collect">
                AND c.`user_id` = #{userId}
            </if>
            <if test="recommend">
                AND i.`user_id` = 1
            </if>
        </where>
        order by i.id
        LIMIT 0,1
    </select>

    <select id="selectSongInfobyDetails" resultMap="SongInfoResult">
        select *
        from `song_info`
        where details = #{s}
    </select>


</mapper>
